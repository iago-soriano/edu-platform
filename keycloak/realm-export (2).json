{
  "id": "38f3e996-c038-4fa9-99c0-caba4e2db973",
  "realm": "edu-platform",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": true,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "613d826e-1ae3-42fd-8103-e762acb08d14",
        "name": "default-roles-edu-platform",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "38f3e996-c038-4fa9-99c0-caba4e2db973",
        "attributes": {}
      },
      {
        "id": "7c37f0d3-ff3d-48fc-a6ea-02a0a84c374e",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "38f3e996-c038-4fa9-99c0-caba4e2db973",
        "attributes": {}
      },
      {
        "id": "7d8ee3c7-78c9-46ac-ae2d-6107fe5fd40f",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "38f3e996-c038-4fa9-99c0-caba4e2db973",
        "attributes": {}
      }
    ],
    "client": {
      "admin-rest": [],
      "web-app": [],
      "realm-management": [
        {
          "id": "b017f3e2-812a-453c-8768-ef3e6624d885",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "e51455d2-b4f0-4898-8e8c-577f8abb5d07",
          "name": "publish-events",
          "description": "${role_publish-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "b7aeb35c-cc50-4807-abd7-d5463c55cef3",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "46377290-93c6-413b-8577-4d1abf3a73a3",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "e8cfe726-82f3-4eff-9f83-7961961574b8",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "0e3de824-e129-4aca-9ec4-20a9ffab550f",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "b0407ea9-b775-4e2a-81ba-724e8049dbf3",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "c83b9e63-221a-42f6-827c-c3fb5895ae50",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "92139aec-bd7f-4bd6-a9d4-ecc32db1f335",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "b1ecf709-f2d2-4166-9862-f385eccc1b33",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "991307b8-e3c3-4320-b1e5-2511746a643a",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "36bde532-3694-4e4c-99ba-ae3379df7a2f",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "dd614938-710f-41b7-9530-9eefb730ccf9",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "d3c847e5-4e59-409a-a904-99db8982f044",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "6afc9a7f-db34-4851-9c5e-61f45f8c9b42",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "cf13c3d4-5973-49b0-9b53-dc5034a8ff4c",
          "name": "view-organizations",
          "description": "${role_view-organizations}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "a74a6f81-8354-4ec0-bc64-d6e23e828508",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-authorization",
                "publish-events",
                "impersonation",
                "view-identity-providers",
                "create-client",
                "query-realms",
                "view-clients",
                "query-users",
                "manage-identity-providers",
                "query-groups",
                "view-realm",
                "manage-events",
                "view-events",
                "manage-clients",
                "query-clients",
                "view-organizations",
                "manage-organizations",
                "view-users",
                "manage-users",
                "view-authorization",
                "manage-realm"
              ]
            }
          },
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "39795f07-ac70-48a7-bb1a-77c59b1b66ea",
          "name": "manage-organizations",
          "description": "${role_manage-organizations}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "141989b4-3563-4abb-a8b0-e198cf1c04c7",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "af3a9d90-434f-4071-bc49-ed9ce275fbb5",
          "name": "create-organization",
          "description": "${role_create-organization}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "e5d5384e-96d7-4556-95a5-f6bafe20285f",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "9bbf3b55-4581-471c-8abc-3bf0f227d461",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        },
        {
          "id": "e81c73bf-3723-4092-b0d5-5cb1769f9c4a",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "admin-rest1": [],
      "idp-wizard": [],
      "admin-portal": [],
      "broker": [
        {
          "id": "ca0b7083-0cb2-4359-95d7-f83f4228203f",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "68731217-4e64-4060-8291-cb84a6cee07e",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "fce2329f-69be-4dac-aeb4-86f76d4aa22d",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "b008f772-2573-496e-ab5d-45f96f553dfe",
          "attributes": {}
        },
        {
          "id": "783425cf-c3cc-4b34-9c70-0dede1e45789",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "b008f772-2573-496e-ab5d-45f96f553dfe",
          "attributes": {}
        },
        {
          "id": "520ba214-c8a3-4099-9ff5-1fe3995841f4",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b008f772-2573-496e-ab5d-45f96f553dfe",
          "attributes": {}
        },
        {
          "id": "0a09a6c9-b539-4b8d-9535-a21579cbf6d0",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "b008f772-2573-496e-ab5d-45f96f553dfe",
          "attributes": {}
        },
        {
          "id": "bc1dbb48-437f-4a63-84da-5d1b78956ae1",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "b008f772-2573-496e-ab5d-45f96f553dfe",
          "attributes": {}
        },
        {
          "id": "3ae25600-a746-43c7-83e5-ec20e0500e0a",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "b008f772-2573-496e-ab5d-45f96f553dfe",
          "attributes": {}
        },
        {
          "id": "0769c61e-77e5-4ac7-a501-8d098a0e603d",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b008f772-2573-496e-ab5d-45f96f553dfe",
          "attributes": {}
        },
        {
          "id": "df607cb7-5b74-4c55-aae8-2ec6798fbc74",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "b008f772-2573-496e-ab5d-45f96f553dfe",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "613d826e-1ae3-42fd-8103-e762acb08d14",
    "name": "default-roles-edu-platform",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "38f3e996-c038-4fa9-99c0-caba4e2db973"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "1c0dd158-eaef-4fe3-8c5b-581595ed81fc",
      "username": "service-account-admin-rest",
      "emailVerified": false,
      "createdTimestamp": 1728213757559,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "admin-rest",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-edu-platform"
      ],
      "clientRoles": {
        "realm-management": [
          "realm-admin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "0a75d62d-fc6b-4aeb-8166-56fecde29cf9",
      "username": "service-account-admin-rest1",
      "emailVerified": false,
      "createdTimestamp": 1728223475715,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "admin-rest1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-edu-platform"
      ],
      "clientRoles": {
        "realm-management": [
          "realm-admin",
          "manage-realm"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "b008f772-2573-496e-ab5d-45f96f553dfe",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/edu-platform/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/edu-platform/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cb05628d-0612-4015-b78e-bfb4706adf91",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/edu-platform/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/edu-platform/account/*",
        "/realms/edu-platform/portal/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "3abaa0f6-ade1-4a74-a868-9f65160a1a05",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e1f87c56-0bf0-4f3c-88e0-eeaa3cb422ca",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "866455ed-95e8-4097-be8a-f4a2ca6d113b",
      "clientId": "admin-portal",
      "name": "Admin portal",
      "description": "Portal for self-administration of profile and organizations.",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/edu-platform/portal/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/edu-platform/portal/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "1e2db455-5386-4ec6-9356-e15665dd266f",
          "name": "organizations",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-role-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organizations",
            "jsonType.label": "JSON",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "defcce11-bc20-4d5a-bdd3-4a81e3d3f551",
          "name": "org_id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "org_id",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "org_id",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "eac9d605-da70-42b2-b1d7-a485638e6d4c",
      "clientId": "admin-rest",
      "name": "admin-rest",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1728213704",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "2d4cfa48-6a64-485c-a0e1-b6e4d82d83fe",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b18010dd-18cd-401c-95b0-0588c6e07656",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3c2663dc-a746-4025-b28c-f72360df03c6",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0e585ab1-4932-42d0-95b1-fbf7fd2bfcd8",
      "clientId": "admin-rest1",
      "name": "admin-rest1",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1728223475",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "833a2b0d-a508-42f3-8bc5-d15ad4e21748",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "be26954b-17b2-4194-85eb-9d2227e7ce68",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9f3ebdf2-3179-45ef-9e68-e89afc3e7392",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "68731217-4e64-4060-8291-cb84a6cee07e",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fa18be03-7e36-4154-8f2d-93aa6f4351b5",
      "clientId": "idp-wizard",
      "name": "IdP Config Wizard",
      "description": "Wizards for configuring various vendor IdPs.",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/edu-platform/wizard/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/edu-platform/wizard/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "1e1f566c-a56e-4fcc-ad6b-c05115dcb8e6",
          "name": "org_id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "org_id",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "org_id",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "0ad43a08-b32e-4804-8cd5-08e7360fd823",
          "name": "organizations",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-role-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organizations",
            "jsonType.label": "JSON",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a2f2ae7a-ed0a-4ae5-ac2c-a7e3d41c3612",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2fbaa5fd-c35e-43f5-aa6b-42e2acceb83f",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/edu-platform/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/edu-platform/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "7aa96343-9b85-4359-87a5-f3bad3fbe481",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bf3e9b2a-abf9-4b73-868c-0d6d6f32040c",
      "clientId": "web-app",
      "name": "web-app",
      "description": "",
      "rootUrl": "http://localhost:3002/*",
      "adminUrl": "http://localhost:3002/*",
      "baseUrl": "http://localhost:3002/*",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:3002/*"
      ],
      "webOrigins": [
        "http://localhost:3002/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "access.token.lifespan": "2592000",
        "client.secret.creation.time": "1728245296",
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "post.logout.redirect.uris": "http://localhost:3002/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "use.jwks.url": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "acr.loa.map": "{}",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "a003b1aa-a91d-4f25-bbec-ce15692ee473",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "e033caf8-9f5e-4008-9289-49f36cd03fde",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "a952de0a-7bb0-444e-a0ec-0716a5ca0b68",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "016288fd-5552-4d3a-8486-033d8f5b837a",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "931e5b13-62bf-4eb3-8417-90c8d2d6f37f",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "9ada1ea2-2c62-4f8f-8e59-301a98da78ca",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "6645a34c-0799-4083-8f10-37f55b54176a",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "65eda2a2-3d48-4cc3-b34c-94c14af73a71",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "abb3c003-a8b0-4679-866b-91a3f5c48e1d",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        }
      ]
    },
    {
      "id": "dfa2e1a2-aa3d-4328-9171-0fe5f0e24e3a",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "dca0cc95-8472-4eef-a9e5-f0f06258297a",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f91614b1-358e-422e-9b42-90a093c1955f",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "33d70945-c22e-4da2-9324-3729198433e6",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "1fd0cbf3-51e0-4982-b283-7494800813b8",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "76ebc054-3e94-4098-acb7-ba7b418b3039",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "19727e6d-e360-4b7f-ada0-c9259dbe574c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "23c033de-cd04-4900-be4b-426d632a3470",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ae4fda5f-4f5c-4b34-88f6-d70df7f47f94",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5c7f7d11-a7f2-405c-a142-a2cc02409d5d",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f08dcf03-f9dd-4fa6-90e7-c3287c48d9fb",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3e116bf3-a160-4695-96f4-571e0a256d65",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4200bf4a-45be-452d-bd5a-e1ece42b1036",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "54d51e71-0a16-43cb-b7c3-ef6c1b06790f",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b05fb341-9585-46fa-8b78-6fac28367318",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "22f65f52-1995-4df3-aec7-1c781553e62a",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "8b7f1151-9217-44ae-a275-7dd6a220acfa",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bb7c8aed-fbfb-40ed-954d-af98b39154c3",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "313c8073-142b-46a1-93f1-1a0d371fa914",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "f34c3260-1f40-4ea0-9063-332e913fb440",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "5f1d2c7c-1949-435f-8846-73c58bc59a3e",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "5ef5ca48-a8f4-4e01-bc84-9c592869f932",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ae1d3618-86df-4e13-b2a4-250589cf308a",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "a4d0ea45-6096-4ea4-9f76-f9ee34c01c96",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ddf3b866-f9cd-490c-a10b-d41ac45482ce",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "1c76f6a2-8a2c-435a-8666-bbe308a677c1",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "49f09d4b-590f-4dff-98ea-d8626fbf25ff",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "214a360f-41f3-4219-9e5e-edce4168386c",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "d90e510e-839c-4fe5-bdf7-4ce3e6b7abaa",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "ce5a751e-4ee3-42e9-a508-c07e5a471bf1",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "17a011a2-571e-49a4-8560-63f35b17d0f9",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "attributes",
  "accountTheme": "portal",
  "adminTheme": "phasetwo.v2",
  "emailTheme": "mustache",
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging",
    "ext-event-webhook"
  ],
  "enabledEventTypes": [
    "SEND_RESET_PASSWORD",
    "UPDATE_CONSENT_ERROR",
    "GRANT_CONSENT",
    "VERIFY_PROFILE_ERROR",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_TOTP",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "RESTART_AUTHENTICATION",
    "IMPERSONATE",
    "UPDATE_PROFILE_ERROR",
    "LOGIN",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "OAUTH2_EXTENSION_GRANT",
    "USER_DISABLED_BY_PERMANENT_LOCKOUT",
    "TOKEN_EXCHANGE",
    "AUTHREQID_TO_TOKEN",
    "LOGOUT",
    "REGISTER",
    "DELETE_ACCOUNT_ERROR",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "USER_DISABLED_BY_TEMPORARY_LOCKOUT",
    "DELETE_ACCOUNT",
    "UPDATE_PASSWORD",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "FEDERATED_IDENTITY_OVERRIDE_LINK",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "OAUTH2_EXTENSION_GRANT_ERROR",
    "SEND_VERIFY_EMAIL",
    "OAUTH2_DEVICE_AUTH",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "FEDERATED_IDENTITY_OVERRIDE_LINK_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "UPDATE_EMAIL",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "CLIENT_UPDATE_ERROR",
    "AUTHREQID_TO_TOKEN_ERROR",
    "INVITE_ORG_ERROR",
    "UPDATE_PROFILE",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "INVITE_ORG",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "VERIFY_PROFILE",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "28855a11-d980-42f6-9d84-6c099b9ce640",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "2322a272-c7c0-4026-89fa-817c5dcd9910",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "5839b189-c4d8-4386-9e4c-f97b942ddb95",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "40491f6f-ca3e-4390-8d01-7812dd8edd4a",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "a184cfd3-7868-4c54-9c9d-09ed66907553",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "8484f46c-f4af-4214-bb89-e09e75fcaa35",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "3296ad7f-5670-4c80-8a81-8aa436d88877",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "c1e3d193-690e-4a7c-b481-a8aa4809a0bc",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "1f3b5e17-f182-484d-a230-decdc1879c70",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"org.ro.active\",\"displayName\":\"Active organization ID\",\"permissions\":{\"view\":[\"admin\"],\"edit\":[\"admin\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "aa37f203-316c-4823-9813-a9ed810c0dfa",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "7ba81c16-859d-4e33-a282-3c24f0c7392f",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "07394054-b4d1-43de-83c0-4fca24059049",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "b72af886-e8b2-47a3-9b7f-8b7ecef93186",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "7f28336a-4b22-48e0-a713-1729816954dd",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bda4101c-25ee-42af-9540-b254484bbe70",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a24452bc-fb35-454f-8f45-533d26e44833",
      "alias": "Cookies Sub-Flow",
      "description": "Cookie sub-flow which can be used to switch org.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "ext-select-org",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8f0668c5-a6fe-4f6e-ab97-657f8c6ff51e",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a4711624-30f0-422e-99cf-05bed658449b",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "11d49a1b-84cd-4d3b-a247-7a2801fd0309",
      "alias": "Forms Sub-Flow",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Org Browser - Conditional OTP",
          "userSetupAllowed": false
        },
        {
          "authenticator": "ext-select-org",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ea909a13-2b34-4bf3-ad9e-d4aa4093039a",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c08279df-0ac4-445d-a0ea-0efa2474e22e",
      "alias": "IDP Sub-Flow",
      "description": "IDP sub-flow to select org.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "ext-select-org",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e8f394f0-4eed-4422-a7b6-f52114f699c6",
      "alias": "Org Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "99e0d2a2-3158-4d56-895b-f0ae59861a8d",
      "alias": "Org Browser Flow",
      "description": "Browser flow with select organization step.",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Cookies Sub-Flow",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "IDP Sub-Flow",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Forms Sub-Flow",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b8feb647-8e14-412b-ac94-ca7a262a84be",
      "alias": "Org Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3cd27ac0-f6de-4b1d-9501-034941c0e18b",
      "alias": "Org Direct Grant Flow",
      "description": "Direct grant flow with select organization step.",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Org Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        },
        {
          "authenticator": "ext-select-org",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4f1c9a30-e563-4ee0-9ccc-f8b06f8d93d1",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d2f57178-91dd-4838-9616-7514a04a8b7f",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3893d612-36dd-493a-9ccf-7feb10314162",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "30bc1b9e-1b45-4396-8c86-a5c6791d1bf1",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "09a27229-1b63-4602-9f2b-2902fc0dd058",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1e3d7183-f2e1-4b84-bb43-441f6804bb6c",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7cebfe77-fdad-469c-ad04-0c83a087a7b3",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3d4881ef-a97b-4765-87a5-98cbbd007afd",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "711681e4-2d56-45f1-a611-37c9da829ad6",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "638fa373-537e-4587-951f-c5e2250f2451",
      "alias": "magic link",
      "description": "Simple magic link authentication flow.",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "magic link forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6dd9952a-52a0-46aa-8b9f-6e22cb243ea3",
      "alias": "magic link forms",
      "description": "Forms for simple magic link authentication flow.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "ext-magic-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "46bb9b12-a55f-4e7e-913d-0f86c287f83f",
      "alias": "post org broker login",
      "description": "Post broker login flow used for organization IdPs.",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "ext-auth-org-note",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "ext-auth-org-add-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0c99c388-6977-4a42-bd85-e61888f48a90",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7434dbd7-c572-435d-90fb-b2e8b130aba5",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1159bac5-9616-49c6-8260-d921bd85a0d1",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3917a932-080d-40d9-86ab-ce34e0fc9e8a",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "1d86ede3-df07-472d-954a-d7c64779e13c",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "5bcb944e-21f2-4bdb-8e8e-8f38ba8c045c",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "organizationsEnabled": "false",
    "_providerConfig.assets.login.css": "/* Patternfly CSS places a \"bg-login.jpg\" as the background on this \".login-pf\" class.\n   This clashes with the \"keycloak-bg.png' background defined on the body below.\n   Therefore the Patternfly background must be set to none. */\n.login-pf {\n    background: none;\n}\n\n.login-pf body {\n    background: url(\"../img/keycloak-bg.png\") no-repeat center center fixed;\n    background-size: cover;\n    height: 100%;\n}\n\ntextarea.pf-c-form-control {\n\theight: auto;\n}\n\n.pf-c-alert__title {\n    font-size: var(--pf-global--FontSize--xs);\n}\n\np.instruction {\n    margin: 5px 0;\n}\n\n.pf-c-button.pf-m-control {\n    border-color: rgba(230, 230, 230, 0.5);\n}\n\nh1#kc-page-title {\n    margin-top: 10px;\n}\n\n#kc-locale ul {\n    background-color: var(--pf-global--BackgroundColor--100);\n    display: none;\n    top: 20px;\n    min-width: 100px;\n    padding: 0;\n}\n\n#kc-locale-dropdown{\n    display: inline-block;\n}\n\n#kc-locale-dropdown:hover ul {\n    display:block;\n}\n\n#kc-locale-dropdown a {\n    color: var(--pf-global--Color--200);\n    text-align: right;\n    font-size: var(--pf-global--FontSize--sm);\n}\n\n#kc-locale-dropdown button {\n    background: none;\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    color: var(--pf-global--Color--200);\n    text-align: right;\n    font-size: var(--pf-global--FontSize--sm);\n}\n\nbutton#kc-current-locale-link::after {\n    content: \"\\2c5\";\n    margin-left: var(--pf-global--spacer--xs)\n}\n\n.login-pf .container {\n    padding-top: 40px;\n}\n\n.login-pf a:hover {\n    color: #0099d3;\n}\n\n#kc-logo {\n    width: 100%;\n}\n\ndiv.kc-logo-text {\n    background-image: url(../img/keycloak-logo-text.png);\n    background-repeat: no-repeat;\n    height: 63px;\n    width: 300px;\n    margin: 0 auto;\n}\n\ndiv.kc-logo-text span {\n    display: none;\n}\n\n#kc-header {\n    color: #ededed;\n    overflow: visible;\n    white-space: nowrap;\n}\n\n#kc-header-wrapper {\n    font-size: 29px;\n    text-transform: uppercase;\n    letter-spacing: 3px;\n    line-height: 1.2em;\n    padding: 62px 10px 20px;\n    white-space: normal;\n}\n\n#kc-content {\n    width: 100%;\n}\n\n#kc-attempted-username {\n    font-size: 20px;\n    font-family: inherit;\n    font-weight: normal;\n    padding-right: 10px;\n}\n\n#kc-username {\n    text-align: center;\n    margin-bottom:-10px;\n}\n\n#kc-webauthn-settings-form {\n    padding-top: 8px;\n}\n\n#kc-form-webauthn .select-auth-box-parent {\n    pointer-events: none;\n}\n\n#kc-form-webauthn .select-auth-box-desc {\n    color: var(--pf-global--palette--black-600);\n}\n\n#kc-form-webauthn .select-auth-box-headline {\n    color: var(--pf-global--Color--300);\n}\n\n#kc-form-webauthn .select-auth-box-icon {\n    flex: 0 0 3em;\n}\n\n#kc-form-webauthn .select-auth-box-icon-properties {\n    margin-top: 10px;\n    font-size: 1.8em;\n}\n\n#kc-form-webauthn .select-auth-box-icon-properties.unknown-transport-class {\n    margin-top: 3px;\n}\n\n#kc-form-webauthn .pf-l-stack__item {\n    margin: -1px 0;\n}\n\n#kc-content-wrapper {\n    margin-top: 20px;\n}\n\n#kc-form-wrapper {\n    margin-top: 10px;\n}\n\n#kc-info {\n    margin: 20px -40px -30px;\n}\n\n#kc-info-wrapper {\n    font-size: 13px;\n    padding: 15px 35px;\n    background-color: #F0F0F0;\n}\n\n#kc-form-options span {\n    display: block;\n}\n\n#kc-form-options .checkbox {\n    margin-top: 0;\n    color: #72767b;\n}\n\n#kc-terms-text {\n    margin-bottom: 20px;\n}\n\n#kc-registration-terms-text {\n    max-height: 100px;\n    overflow-y: auto;\n    overflow-x: hidden;\n    margin: 5px;\n}\n\n#kc-registration {\n    margin-bottom: 0;\n}\n\n/* TOTP */\n\n.subtitle {\n    text-align: right;\n    margin-top: 30px;\n    color: #909090;\n}\n\n.required {\n    color: var(--pf-global--danger-color--200);\n}\n\nol#kc-totp-settings {\n    margin: 0;\n    padding-left: 20px;\n}\n\nul#kc-totp-supported-apps {\n    margin-bottom: 10px;\n}\n\n#kc-totp-secret-qr-code {\n    max-width:150px;\n    max-height:150px;\n}\n\n#kc-totp-secret-key {\n    background-color: #fff;\n    color: #333333;\n    font-size: 16px;\n    padding: 10px 0;\n}\n\n/* OAuth */\n\n#kc-oauth h3 {\n    margin-top: 0;\n}\n\n#kc-oauth ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n#kc-oauth ul li {\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    font-size: 12px;\n    padding: 10px 0;\n}\n\n#kc-oauth ul li:first-of-type {\n    border-top: 0;\n}\n\n#kc-oauth .kc-role {\n    display: inline-block;\n    width: 50%;\n}\n\n/* Code */\n#kc-code textarea {\n    width: 100%;\n    height: 8em;\n}\n\n/* Social */\n.kc-social-links {\n    margin-top: 20px;\n}\n\n.kc-social-links li {\n    width: 100%;\n}\n\n.kc-social-provider-logo {\n    font-size: 23px;\n    width: 30px;\n    height: 25px;\n    float: left;\n}\n\n.kc-social-gray {\n    color: var(--pf-global--Color--200);\n}\n\n.kc-social-gray h2 {\n    font-size: 1em;\n}\n\n.kc-social-item {\n    margin-bottom: var(--pf-global--spacer--sm);\n    font-size: 15px;\n    text-align: center;\n}\n\n.kc-social-provider-name {\n    position: relative;\n}\n\n.kc-social-icon-text {\n    left: -15px;\n}\n\n.kc-social-grid {\n    display:grid;\n    grid-column-gap: 10px;\n    grid-row-gap: 5px;\n    grid-column-end: span 6;\n    --pf-l-grid__item--GridColumnEnd: span 6;\n}\n\n.kc-social-grid .kc-social-icon-text {\n    left: -10px;\n}\n\n.kc-login-tooltip {\n    position: relative;\n    display: inline-block;\n}\n\n.kc-social-section {\n    text-align: center;\n}\n\n.kc-social-section hr{\n    margin-bottom: 10px\n}\n\n.kc-login-tooltip .kc-tooltip-text{\n    top:-3px;\n    left:160%;\n    background-color: black;\n    visibility: hidden;\n    color: #fff;\n\n    min-width:130px;\n    text-align: center;\n    border-radius: 2px;\n    box-shadow:0 1px 8px rgba(0,0,0,0.6);\n    padding: 5px;\n\n    position: absolute;\n    opacity:0;\n    transition:opacity 0.5s;\n}\n\n/* Show tooltip */\n.kc-login-tooltip:hover .kc-tooltip-text {\n    visibility: visible;\n    opacity:0.7;\n}\n\n/* Arrow for tooltip */\n.kc-login-tooltip .kc-tooltip-text::after {\n    content: \" \";\n    position: absolute;\n    top: 15px;\n    right: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent black transparent transparent;\n}\n\n@media (min-width: 768px) {\n    #kc-container-wrapper {\n        position: absolute;\n        width: 100%;\n    }\n\n    .login-pf .container {\n        padding-right: 80px;\n    }\n\n    #kc-locale {\n        position: relative;\n        text-align: right;\n        z-index: 9999;\n    }\n}\n\n@media (max-width: 767px) {\n\n    .login-pf body {\n        background: white;\n    }\n\n    #kc-header {\n        padding-left: 15px;\n        padding-right: 15px;\n        float: none;\n        text-align: left;\n    }\n\n    #kc-header-wrapper {\n        font-size: 16px;\n        font-weight: bold;\n        padding: 20px 60px 0 0;\n        color: #72767b;\n        letter-spacing: 0;\n    }\n\n    div.kc-logo-text {\n        margin: 0;\n        width: 150px;\n        height: 32px;\n        background-size: 100%;\n    }\n\n    #kc-form {\n        float: none;\n    }\n\n    #kc-info-wrapper {\n        border-top: 1px solid rgba(255, 255, 255, 0.1);\n        background-color: transparent;\n    }\n\n    .login-pf .container {\n        padding-top: 15px;\n        padding-bottom: 15px;\n    }\n\n    #kc-locale {\n        position: absolute;\n        width: 200px;\n        top: 20px;\n        right: 20px;\n        text-align: right;\n        z-index: 9999;\n    }\n}\n\n@media (min-height: 646px) {\n    #kc-container-wrapper {\n        bottom: 12%;\n    }\n}\n\n@media (max-height: 645px) {\n    #kc-container-wrapper {\n        padding-top: 50px;\n        top: 20%;\n    }\n}\n\n.card-pf form.form-actions .btn {\n    float: right;\n    margin-left: 10px;\n}\n\n#kc-form-buttons {\n    margin-top: 20px;\n}\n\n.login-pf-page .login-pf-brand {\n    margin-top: 20px;\n    max-width: 360px;\n    width: 40%;\n}\n\n.select-auth-box-arrow{\n    display: flex;\n    align-items: center;\n    margin-right: 2rem;\n}\n\n.select-auth-box-icon{\n    display: flex;\n    flex: 0 0 2em;\n    justify-content: center;\n    margin-right: 1rem;\n    margin-left: 3rem;\n}\n\n.select-auth-box-parent{\n    border-top: 1px solid var(--pf-global--palette--black-200);\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    cursor: pointer;\n    text-align: left;\n    align-items: unset;\n    background-color: unset;\n    border-right: unset;\n    border-bottom: unset;\n    border-left: unset;\n}\n\n.select-auth-box-parent:hover{\n    background-color: #f7f8f8;\n}\n\n.select-auth-container {\n    padding-bottom: 0px !important;\n}\n\n.select-auth-box-headline {\n    font-size: var(--pf-global--FontSize--md);\n    color: var(--pf-global--primary-color--100);\n    font-weight: bold;\n}\n\n.select-auth-box-desc {\n    font-size: var(--pf-global--FontSize--sm);\n}\n\n.select-auth-box-paragraph {\n    text-align: center;\n    font-size: var(--pf-global--FontSize--md);\n    margin-bottom: 5px;\n}\n\n.card-pf {\n    margin: 0 auto;\n    box-shadow: var(--pf-global--BoxShadow--lg);\n    padding: 0 20px;\n    max-width: 500px;\n    border-top: 4px solid;\n    border-color: var(--pf-global--primary-color--100);\n}\n\n/*phone*/\n@media (max-width: 767px) {\n    .login-pf-page .card-pf {\n        max-width: none;\n        margin-left: 0;\n        margin-right: 0;\n        padding-top: 0;\n        border-top: 0;\n        box-shadow: 0 0;\n    }\n\n    .kc-social-grid {\n        grid-column-end: 12;\n        --pf-l-grid__item--GridColumnEnd: span 12;\n    }\n\n    .kc-social-grid .kc-social-icon-text {\n        left: -15px;\n    }\n}\n\n.login-pf-page .login-pf-signup {\n    font-size: 15px;\n    color: #72767b;\n}\n#kc-content-wrapper .row {\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.login-pf-page.login-pf-page-accounts {\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.login-pf-page .btn-primary {\n    margin-top: 0;\n}\n\n.login-pf-page .list-view-pf .list-group-item {\n    border-bottom: 1px solid #ededed;\n}\n\n.login-pf-page .list-view-pf-description {\n    width: 100%;\n}\n\n#kc-form-login div.form-group:last-of-type,\n#kc-register-form div.form-group:last-of-type,\n#kc-update-profile-form div.form-group:last-of-type,\n#kc-update-email-form div.form-group:last-of-type{\n    margin-bottom: 0px;\n}\n\n.no-bottom-margin {\n    margin-bottom: 0;\n}\n\n#kc-back {\n    margin-top: 5px;\n}\n\n/* Recovery codes */\n.kc-recovery-codes-warning {\n    margin-bottom: 32px;\n}\n.kc-recovery-codes-warning .pf-c-alert__description p {\n    font-size: 0.875rem;\n}\n.kc-recovery-codes-list {\n    list-style: none;\n    columns: 2;\n    margin: 16px 0;\n    padding: 16px 16px 8px 16px;\n    border: 1px solid #D2D2D2;\n}\n.kc-recovery-codes-list li {\n    margin-bottom: 8px;\n    font-size: 11px;\n}\n.kc-recovery-codes-list li span {\n    color: #6A6E73;\n    width: 16px;\n    text-align: right;\n    display: inline-block;\n    margin-right: 1px;\n}\n\n.kc-recovery-codes-actions {\n    margin-bottom: 24px;\n}\n.kc-recovery-codes-actions button {\n    padding-left: 0;\n}\n.kc-recovery-codes-actions button i {\n    margin-right: 8px;\n}\n\n.kc-recovery-codes-confirmation {\n    align-items: baseline;\n    margin-bottom: 16px;\n}\n\n#certificate_subjectDN {\n    overflow-wrap: break-word\n}\n/* End Recovery codes */"
  },
  "keycloakVersion": "25.0.6",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}