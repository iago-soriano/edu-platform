services:
  # keycloak:
  #   container_name: keycloak
  #   image: quay.io/keycloak/keycloak:latest
  #   restart: always
  #   command: start-dev
  #   environment:
  #     - KEYCLOAK_ADMIN=admin
  #     - KEYCLOAK_ADMIN_PASSWORD=password
  #     - DB_VENDOR=mysql
  #     - DB_ADDR=db
  #     - KC_HTTP_ENABLED=true
  #     - KC_HOSTNAME_STRICT=false
  #     - DB_USER=keycloak
  #     - DB_PASSWORD=password

  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - keycloak_db
  # labels:
  #   - "traefik.enable=true"
  #   - "traefik.http.routers.keycloak.entrypoints=http"
  #   - "traefik.http.routers.keycloak.rule=Host(`keycloak.yourdomain.com`)"
  #   - "traefik.http.middlewares.keycloak-https-redirect.redirectscheme.scheme=https"
  #   - "traefik.http.routers.keycloak.middlewares=keycloak-https-redirect"
  #   - "traefik.http.routers.keycloak-secure.entrypoints=https"
  #   - "traefik.http.routers.keycloak-secure.rule=Host(`keycloak.yourdomain.com`)"
  #   - "traefik.http.routers.keycloak-secure.tls=true"
  #   - "traefik.http.routers.keycloak-secure.service=keycloak"
  #   - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
  #   - "traefik.docker.network=proxy"
  keycloak_p2:
    container_name: keycloak_p2
    image: quay.io/phasetwo/phasetwo-keycloak
    restart: always
    command: -v start-dev --import-realm --db=postgres
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - DB_VENDOR=postgres
      - DB_ADDR=keycloak_db
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_DB_DRIVER=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak_db:5432/keycloak?user=keycloak&password=password
      - DB_USER=keycloak
      - DB_PASSWORD=password
    ports:
      - 8080:8080
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    depends_on:
      - keycloak_db
    networks:
      - my_bridge_network

  keycloak_db:
    image: postgres:latest # Use the latest PostgreSQL image from Docker Hub
    restart: always # Restart policy
    container_name: keycloak_db
    environment:
      POSTGRES_DB: keycloak # Specify the name of the initial database
      POSTGRES_USER: keycloak # Specify the username for PostgreSQL
      POSTGRES_PASSWORD: password # Specify the password for PostgreSQL
    ports:
      - "5433:5432" # Map container port 5432 to host port 5432 (adjust as needed)
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data # Mount a volume for persistent data storage
    networks:
      - my_bridge_network # Connect to custom bridge network

  postgres:
    image: postgres:latest # Use the latest PostgreSQL image from Docker Hub
    container_name: postgres # Give your container a name
    restart: always # Restart policy
    environment:
      POSTGRES_DB: edu-platform # Specify the name of the initial database
      POSTGRES_USER: isrm # Specify the username for PostgreSQL
      POSTGRES_PASSWORD: isrm2303 # Specify the password for PostgreSQL
    ports:
      - "5432:5432" # Map container port 5432 to host port 5432 (adjust as needed)
    volumes:
      - postgres_data:/var/lib/postgresql/data # Mount a volume for persistent data storage

  pgadmin:
    image: dpage/pgadmin4
    restart: always # Restart policy
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    depends_on:
      - postgres
    networks:
      - my_network

volumes:
  postgres_data_keycloak:
  postgres_data:

networks:
  my_network:
  my_bridge_network:
    driver: bridge
