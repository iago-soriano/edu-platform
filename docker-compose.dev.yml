services:
  keycloak_p2:
    container_name: keycloak_p2
    image: quay.io/phasetwo/phasetwo-keycloak
    restart: always
    command: -v start-dev --import-realm --db=postgres
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - DB_VENDOR=postgres
      - DB_ADDR=keycloak_db
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_DB_DRIVER=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak_postgres:5432/keycloak?user=keycloak&password=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
    ports:
      - 8070:8080
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    depends_on:
      - keycloak_postgres
    networks:
      - my_bridge_network

  keycloak_postgres:
    image: postgres:latest # Use the latest PostgreSQL image from Docker Hub
    restart: always # Restart policy
    container_name: keycloak_postgres
    environment:
      POSTGRES_DB: keycloak # Specify the name of the initial database
      POSTGRES_USER: keycloak # Specify the username for PostgreSQL
      POSTGRES_PASSWORD: keycloak # Specify the password for PostgreSQL''
    ports:
      - "5433:5432" # HOST:CONTAINER
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data # Mount a volume for persistent data storage
    networks:
      - my_bridge_network # Connect to custom bridge network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak", "-d", "keycloak"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  api_postgres:
    image: postgres:latest # Use the latest PostgreSQL image from Docker Hub
    container_name: api_postgres # Give your container a name
    restart: always # Restart policy
    environment:
      POSTGRES_DB: edu-platform # Specify the name of the initial database
      POSTGRES_USER: isrm # Specify the username for PostgreSQL
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Mount a volume for persistent data storage

  pgadmin:
    image: dpage/pgadmin4
    restart: always # Restart policy
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "80:80"
    networks:
      - my_network

volumes:
  postgres_data_keycloak:
  postgres_data:

networks:
  my_network:
  my_bridge_network:
    driver: bridge
